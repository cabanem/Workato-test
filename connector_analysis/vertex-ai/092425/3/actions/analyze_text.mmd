flowchart TD
  execute_analyze_text([execute:analyze_text])
  run_vertex[run_vertex]
  validate_publisher_model_[validate_publisher_model!]
  HTTP_GET{{HTTP:GET}}
  build_ai_payload[build_ai_payload]
  get_ai_template[get_ai_template]
  escape_triple_backticks[escape_triple_backticks]
  json_only_instruction[json_only_instruction]
  process_ai_template[process_ai_template]
  build_base_payload[build_base_payload]
  vertex_url_for[vertex_url_for]
  project_region_path[project_region_path]
  with_resilience[with_resilience]
  rate_limit_defaults[rate_limit_defaults]
  enforce_vertex_rate_limits[enforce_vertex_rate_limits]
  gen_correlation_id[gen_correlation_id]
  circuit_breaker_retry[circuit_breaker_retry]
  get_circuit_state[get_circuit_state]
  check_circuit_status[check_circuit_status]
  log_debug[log_debug]
  handle_circuit_success[handle_circuit_success]
  update_circuit_state[update_circuit_state]
  should_retry_error[should_retry_error]
  extract_http_status[extract_http_status]
  calculate_backoff_delay[calculate_backoff_delay]
  handle_circuit_failure[handle_circuit_failure]
  should_open_circuit[should_open_circuit]
  HTTP_DELETE{{HTTP:DELETE}}
  api_request[api_request]
  HTTP_POST{{HTTP:POST}}
  HTTP_PUT{{HTTP:PUT}}
  extract_response[extract_response]
  check_finish_reason[check_finish_reason]
  get_safety_ratings[get_safety_ratings]
  extract_json[extract_json]
  strip_fences[strip_fences]
  execute_analyze_text --> run_vertex
  with_resilience --> rate_limit_defaults
  with_resilience --> enforce_vertex_rate_limits
  with_resilience --> gen_correlation_id
  with_resilience --> circuit_breaker_retry
  with_resilience --> HTTP_DELETE
  api_request --> HTTP_GET
  api_request --> HTTP_POST
  api_request --> HTTP_PUT
  api_request --> HTTP_DELETE
  get_circuit_state --> HTTP_GET
  check_circuit_status --> log_debug
  should_retry_error --> extract_http_status
  handle_circuit_success --> update_circuit_state
  handle_circuit_success --> log_debug
  handle_circuit_failure --> should_open_circuit
  handle_circuit_failure --> log_debug
  circuit_breaker_retry --> rate_limit_defaults
  circuit_breaker_retry --> get_circuit_state
  circuit_breaker_retry --> check_circuit_status
  circuit_breaker_retry --> handle_circuit_success
  circuit_breaker_retry --> should_retry_error
  circuit_breaker_retry --> calculate_backoff_delay
  circuit_breaker_retry --> log_debug
  circuit_breaker_retry --> handle_circuit_failure
  validate_publisher_model_ --> HTTP_GET
  get_ai_template --> escape_triple_backticks
  get_ai_template --> json_only_instruction
  process_ai_template --> build_base_payload
  build_ai_payload --> get_ai_template
  build_ai_payload --> process_ai_template
  vertex_url_for --> project_region_path
  run_vertex --> validate_publisher_model_
  run_vertex --> build_ai_payload
  run_vertex --> vertex_url_for
  run_vertex --> with_resilience
  run_vertex --> api_request
  run_vertex --> extract_response
  extract_json --> strip_fences
  extract_json --> log_debug
  extract_response --> check_finish_reason
  extract_response --> get_safety_ratings
  extract_response --> extract_json
  classDef action fill:#E3F2FD,stroke:#1E88E5,stroke-width:1px;
  classDef method fill:#E8F5E9,stroke:#2E7D32,stroke-width:1px;
  classDef http   fill:#FFF3E0,stroke:#EF6C00,stroke-width:1px;
  class execute_analyze_text action;
  class run_vertex method;
  class validate_publisher_model_ method;
  class build_ai_payload method;
  class get_ai_template method;
  class escape_triple_backticks method;
  class json_only_instruction method;
  class process_ai_template method;
  class build_base_payload method;
  class vertex_url_for method;
  class project_region_path method;
  class with_resilience method;
  class rate_limit_defaults method;
  class enforce_vertex_rate_limits method;
  class gen_correlation_id method;
  class circuit_breaker_retry method;
  class get_circuit_state method;
  class check_circuit_status method;
  class log_debug method;
  class handle_circuit_success method;
  class update_circuit_state method;
  class should_retry_error method;
  class extract_http_status method;
  class calculate_backoff_delay method;
  class handle_circuit_failure method;
  class should_open_circuit method;
  class api_request method;
  class extract_response method;
  class check_finish_reason method;
  class get_safety_ratings method;
  class extract_json method;
  class strip_fences method;
  class HTTP_GET http;
  class HTTP_DELETE http;
  class HTTP_POST http;
  class HTTP_PUT http;